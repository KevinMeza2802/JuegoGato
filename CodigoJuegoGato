#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// El numero 1 es el usuario y el numero 2 es la maquina

void pedirDatos (int matriz[3][3], int);
void mostrarMatriz (int matriz[3][3], int);
void aleatorioMaquina (int matriz[3][3], int);
int verificar(int matriz[3][3], int);
int verEmpate(int matriz[3][3], int);


int main() {
    
    //Definir matriz
    int matriz[3][3] = {};
    
    printf("!!Bienvenido al Juego del GATO!!\n");
    printf("Tu eres '*' y la maquina es '#' \n");
    printf("Filas-> [ ] [ ] [ ]\n");
    printf("        [ ] [ ] [ ]\n");
    printf("        [ ] [ ] [ ]\n");
    printf("         ^\n");
    printf("         |\n");
    printf("     Columnas\n");
    
    int termino = 0, empate = 0;
    
    do{
        pedirDatos(matriz, 3);
        if(verEmpate(matriz, 3) == 0){
        aleatorioMaquina(matriz, 3);
        }
        mostrarMatriz(matriz, 3);
        termino = verificar(matriz, 3);
        if(termino == 0){
        empate = verEmpate(matriz, 3);
        }
    }while((termino == 0) && (empate == 0));
    
    if(termino == 1 && empate == 0){
        printf("GANASTE igual que en el rocket, maquinon :)");
    }else{
        if(termino == 2 && empate == 0){
            printf("PERDISTE como en el valorant :(");
        }else{
            printf("EMPATE, eres igual de inteligente que un ryzen 3500u");
        }
    }
    
    
    return 0;
}

void pedirDatos (int matriz[3][3], int largo){
    int i, k;
    
    printf("Ingrese las coordenadas\n");
    printf("Fila: ");
    scanf("%i", &i);
    printf("Columna: ");
    scanf("%i", &k);
    
    while((i-1)<0 || (i-1)>=3 || (k-1)<0 || (k-1)>=3 || (matriz[i-1][k-1] != 0)){
        printf("Ingrese coordenadas validas\n");
        printf("Fila: ");
        scanf("%i", &i);
        printf("Columna: ");
        scanf("%i", &k);
    }
    matriz[i-1][k-1] = 1;
}
void mostrarMatriz(int matriz[3][3], int largo){
    for(int i = 0; i<3; i++){
        for(int k = 0; k<3; k++){
            printf("[");
            if(matriz[i][k] == 0){
                printf(" ");
            }
            if(matriz[i][k] == 1){
                printf("*");
            }
            if(matriz[i][k] == 2){
                printf("#");
            }
            printf("]");
        }
        printf("\n");
    }
}

void aleatorioMaquina (int matriz[3][3], int largo){
    int cont = 0;
    int copiaI, copiaK;
    //If comprobar == 0, todavia no se logran los casos
    int comprobar = 0;
    int veces = 0;
    
    if(matriz[1][1] == 0){
        matriz [1][1] = 2;
    }else{
        comprobar = 0;
        //Ver si tiene una oprtunidad la maquina para ganar
        while(comprobar == 0 && veces <3){
            //Ver filas
        for(int i = 0; i<3; i++){
            cont = 0;
            for(int k = 0; k<3; k++){
                if(matriz[i][k] == 2){
                    cont += 1;
                }
                if(matriz[i][k] == 0){
                    copiaI = i;
                    copiaK = k;
                }
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <3){
            //Ver Columnas
        for(int k = 0; k<3; k++){
            cont = 0;
            for(int i = 0; i<3; i++){
                if(matriz[i][k] == 2)
                    cont += 1;
                if(matriz[i][k] == 0){
                    copiaI = i;
                    copiaK = k;
                }
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <1){
            //Ver diagonal
        cont = 0;
        for(int i = 0; i<3; i++){
            if(matriz[i][i] == 2){
                cont += 1;
            }
            if(matriz[i][i] == 0){
                copiaI = i;
                copiaK = i;
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <1){
            //Ver diagonal inversa
        int k = 2;
        cont = 0;
        for(int i = 0; i<3; i++){
            if(matriz[i][k] == 2){
                cont += 1;
            }
            if(matriz[i][k] == 0){
                copiaI = i;
                copiaK = k;
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
            k -= 1;
        }
        veces += 1;
        }
        
        //Ver si tiene una oportunidad la persona para ganar
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <3){
            //Ver filas
        for(int i = 0; i<3; i++){
            cont = 0;
            for(int k = 0; k<3; k++){
                if(matriz[i][k] == 1){
                    cont += 1;
                }
                if(matriz[i][k] == 0){
                    copiaI = i;
                    copiaK = k;
                }
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <3){
            //Ver Columnas
        for(int k = 0; k<3; k++){
            cont = 0;
            for(int i = 0; i<3; i++){
                if(matriz[i][k] == 1)
                    cont += 1;
                if(matriz[i][k] == 0){
                    copiaI = i;
                    copiaK = k;
                }
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <1){
            //Ver diagonal
        cont = 0;
        for(int i = 0; i<3; i++){
            if(matriz[i][i] == 1){
                cont += 1;
            }
            if(matriz[i][i] == 0){
                copiaI = i;
                copiaK = i;
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
        }
        veces += 1;
        }
        
        veces = 0;
        cont = 0;
        while(comprobar == 0 && veces <1){
            //Ver diagonal inversa
        int k = 2;
        cont = 0;
        for(int i = 0; i<3; i++){
            if(matriz[i][k] == 1){
                cont += 1;
            }
            if(matriz[i][k] == 0){
                copiaI = i;
                copiaK = k;
            }
            if((cont == 2) && (matriz[copiaI][copiaK] == 0)){
                matriz[copiaI][copiaK] = 2;
                comprobar = 1;
                break;
            }
            k -= 1;
        }
        veces += 1;
        }
        
        //Aleatorio
        while(comprobar == 0){
            int sePuede = 0;
            int i, k, cont = 0;
            srand(time(NULL));
            do{
                i = rand()%3;
                k = rand()%3;
                if(matriz[i][k] == 0){
                    sePuede = 1;
                }
            }while(sePuede == 0);
            matriz[i][k] = 2;
            comprobar = 1;
        }
        
    }
}
int verificar(int matriz[3][3], int largo){
    int i , k, cont1 = 0, cont2 = 0;
    for(i = 0; i<3; i++){
        cont1 = 0;
        cont2 = 0;
        for(k =0; k<3; k++){
            if(matriz[i][k] == 1){
                cont1 += 1;
            }
            if(matriz[i][k] == 2){
                cont2 += 1;
            }
        }
        if(cont1 == 3) return 1;
        if(cont2 == 3) return 2;
    }
    
    for(k = 0; k<3; k++){
        cont1 = 0;
        cont2 = 0;
        for(i = 0; i<3; i++){
            if(matriz[i][k] == 1){
                cont1 += 1;
            }
            if(matriz[i][k] ==2){
                cont2 += 1;
            }
        }
        if(cont1 == 3) return 1;
        if(cont2 == 3) return 2;
    }
    cont1 = 0;
    cont2 = 0;
    for(i = 0; i<3; i++){
        if(matriz[i][i] == 1){
            cont1 += 1;
        }
        if(matriz[i][i] == 2){
            cont2 += 1;
        }
        if(cont1 == 3) return 1;
        if(cont2 == 3) return 2;
    }
    k =2;
    cont1 = 0;
    cont2 = 0;
    for(i = 0; i<3; i++){
        if(matriz[i][k] == 1){
            cont1 += 1;
        }
        if(matriz[i][k] == 2){
            cont2 += 1;
        }
        k -= 1;
        if(cont1 == 3) return 1;
        if(cont2 == 3) return 2;
    }
    return 0 ;
    
}
int verEmpate(int matriz[3][3], int largo){
    for(int i = 0; i<3; i++){
        for(int k = 0; k<3; k++){
            if(matriz[i][k] == 0) return 0;
        }
    }
    return 1;
}
